# Do NOT edit this file unless you really know what you are doing
SET(CMAKE_COLOR_MAKEFILE ON)
cmake_minimum_required(VERSION 3.16)
cmake_policy(SET CMP0076 NEW)

if(TARGET cpp-utils::static)
	return()
endif()

# Set project name
project(cpp-utils VERSION 1.0 DESCRIPTION "Various C++ utilities" LANGUAGES CXX)
message(STATUS "Configuring cpp-utils")

include(cmake/Message-Functions.cmake)

# Set the C++ standard to C++17
set(CMAKE_CXX_STANDARD 17)

option(WITH_MPI "WITH_MPI" ON)
option(WITH_GDAL "WITH_GDAL" ON)
option(WITH_CGAL "WITH_CGAL" ON)

reportvar(WITH_MPI)
reportvar(WITH_GDAL)
reportvar(WITH_CGAL)

# Set the compile flags
if(MSVC)
	add_compile_options(/O2)
	add_compile_definitions(_CRT_SECURE_NO_WARNINGS)
	add_compile_definitions(_SILENCE_ALL_CXX17_DEPRECATION_WARNINGS)
else()
	add_compile_options(-O3 -Wno-unused-but-set-variable -Wno-sign-compare -Wno-format-security -Wno-tautological-constant-compare)
	# Adding filesystem library
	link_libraries(-lstdc++fs)
endif()

if(CMAKE_COMPILER_IS_GNUCC)
	add_compile_options(-Wno-unused-result -Wno-date-time -Wno-error=date-time)
	#On GCC, even with -Wno-date-time, still get warings of the form: warning: macro "__DATE__" might prevent reproducible builds [-Wdate-time]
endif()

# Find PkgConfig
find_package(PkgConfig QUIET)

# Configure MPI if opted for
if(${WITH_MPI})
	find_package(MPI QUIET)
endif()

# Configure GDAL if opted for
if(${WITH_GDAL})
	find_package(GDAL REQUIRED QUIET)
endif()

# Configure CGAL if opted for
if(${WITH_CGAL})
	if(MSVC)
		#set(CGAL_DISABLE_GMP ON) #GMP is not necessary
		#find_package(CGAL REQUIRED)
		message(STATUS "\n\nCGAL is currently disabled on Windows with MSVC as it iss not compiling")
	else()
		find_package(GDAL REQUIRED QUIET)
	endif()
endif()

set(sources ${sources}
	src/file_utils.cpp
	src/general_utils.cpp
	src/RamerDouglasPeucker.cpp
)

if(${WITH_GDAL} AND GDAL_FOUND)
	set(sources ${sources} src/gdal_utils.cpp)
	add_definitions(-DHAVE_GDAL)
endif()

if(${WITH_CGAL} AND CGAL_FOUND)
	set(sources ${sources} src/cgal_utils.cpp)
	add_definitions(-DHAVE_CGAL)
endif()

# Add the cpp-utils static library
set(target cpp-utils-static)
add_library(${target} STATIC ${sources} )
#set_target_properties(${target} PROPERTIES OUTPUT_NAME cpp-utils)
set_target_properties(${target} PROPERTIES POSITION_INDEPENDENT_CODE ON)
target_include_directories(${target} INTERFACE "$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src>")
target_include_directories(${target} INTERFACE "$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/submodules/csv-parser/single_include>")

if(GDAL_FOUND)
	target_link_libraries(${target} PRIVATE GDAL::GDAL)
endif()
if(CGAL_FOUND)
	target_link_libraries(${target} PRIVATE CGAL::CGAL)
endif()
if(${WITH_MPI})
	target_compile_definitions(${target} PRIVATE -D_MPI_ENABLED -DOMPI_SKIP_MPICXX)
	target_include_directories(${target} PRIVATE SYSTEM ${MPI_INCLUDE_PATH})
	target_link_libraries(${target} PRIVATE ${MPI_LIBRARIES})
endif()
add_library(cpp-utils::static ALIAS cpp-utils-static)
install(TARGETS ${target} EXCLUDE_FROM_ALL)
